{"version":3,"sources":["components/Visualization/VisLoop.ts","components/Visualization/index.tsx","components/ActionsLog/usePlayer.ts","components/ActionsLog/ActionRow.tsx","components/ActionsLog/index.tsx","components/Header/index.tsx","App.tsx","index.tsx"],"names":["VisLoop","canvas","size","initiailExecutionState","isStopped","ctx","executionState","bucketPath","Path2D","waterPath","this","safeNull","getContext","loop","render","requestAnimationFrame","x","y","fill","save","translate","w","scale","fillStyle","clearRect","restore","width","height","fillRect","maxSize","Math","max","params","X","Y","xSize","ySize","xFill","state","yFill","drawBucket","font","textBaseline","textAlign","Z","shadowColor","shadowBlur","fillText","String","autobind","getDimensions","ref","clientWidth","clientHeight","Visualization","canvasRef","useRef","canvasSize","useState","elementSize","setElementSize","useEffect","current","handler","window","addEventListener","removeEventListener","useElementResize","visLoop","setVisLoop","newVisLoop","start","stop","setExecutionState","setSize","className","usePlayer","props","stepDuration","executionSteps","playState","setPlayState","playPosition","setPlayPosition","onStateChange","type","action","timeout","actionsLength","setTimeout","clearTimeout","replay","play","pause","ActionRow","e","step","isLast","index","isFinal","isX","final","style","classNames","active","onClick","ActionsLog","listRef","actionsIterator","onStepDurationChange","setExecutionSteps","length","actionExecutor","ActionExecutor","executionIterator","scrollToItem","icon","disabled","intent","Intent","PRIMARY","WARNING","DANGER","marginBottom","min","labelValues","value","onChange","itemSize","itemCount","data","toaster","Toaster","create","position","Header","onUpdate","setX","setY","setZ","onSolveClick","useCallback","isNaN","Number","show","message","console","log","NONE","randomBetween","clampValueOnBlur","placeholder","onValueChange","v","s","App","solverType","setParams","setActionsIterator","setActionsLength","setStepDuration","a","SolverClass","solversMap","solver","getBestSolutionFromServer","solution","getSolutionLength","iterateActions","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc3b4ad6.chunk.js","sourcesContent":["import { autobind } from \"core-decorators\";\nimport { ActionsIterator } from \"jugs-task-package/dist/types/AbstractSolver\";\nimport InputParams from \"jugs-task-package/dist/types/InputParams\";\nimport JugAction from \"jugs-task-package/dist/types/JugAction\";\nimport JugsState from \"jugs-task-package/dist/types/JugsState\";\nimport safeNull from \"jugs-task-package/dist/utils/safeNull\";\n\nexport interface IDimensions {\n    readonly width: number;\n    readonly height: number;\n}\n\nexport interface IExecutionState {\n    params: InputParams;\n    type: 'action' | 'state';\n    action: JugAction;\n    state: JugsState;\n}\n\nexport default class VisLoop {\n\n    private isStopped: boolean = true;\n    private readonly canvas: HTMLCanvasElement;\n    private size: IDimensions;\n    private readonly ctx: CanvasRenderingContext2D;\n    private executionState: IExecutionState;\n\n    private bucketPath: Path2D = new Path2D('M213.14 250.752L246.332 0H0L33.1916 250.752C33.9384 256.396 36.3446 261.537 39.9771 265.249C43.6096 268.96 48.2302 271 53.0076 271H193.324C198.102 271 202.722 268.96 206.355 265.249C209.987 261.537 212.394 256.396 213.14 250.752ZM11.4109 10L43.1051 249.44C43.5972 253.159 45.1507 256.238 47.124 258.254C49.0567 260.229 51.1685 261 53.008 261H193.324C195.164 261 197.275 260.229 199.208 258.254C201.181 256.238 202.735 253.159 203.227 249.44L234.921 10H11.4109Z');\n    private waterPath: Path2D = new Path2D('M5 4L36.7994 247.35C37.515 252.828 39.8201 257.816 43.3003 261.418C46.7805 265.021 51.2072 267 55.7842 267H190.216C194.793 267 199.22 265.021 202.7 261.418C206.18 257.816 208.485 252.828 209.201 247.35L241 4H5Z');\n\n    constructor(canvas: HTMLCanvasElement, size: IDimensions, initiailExecutionState: IExecutionState) {\n        this.canvas = canvas;\n        this.size = size;\n        this.ctx = safeNull(canvas.getContext('2d'));\n        this.executionState = initiailExecutionState;\n    }\n\n    setExecutionState(executionState: IExecutionState) {\n        this.executionState = executionState;\n    }\n\n    setSize(size: IDimensions) {\n        this.size = size;\n    }\n\n    start() {\n        this.isStopped = false;\n        this.loop();\n    }\n\n    stop() {\n        this.isStopped = true;\n    }\n\n    @autobind\n    loop() {\n        this.render();\n\n        if (!this.isStopped) {\n            requestAnimationFrame(this.loop)\n        }\n    }\n\n    drawBucket(x: number, y: number, size: number, fill: number) {\n        const ctx = this.ctx;\n\n        const w = 247;\n        const h = 270;\n\n        size = 0.3 + 0.7 * size;\n        \n        ctx.save();\n        ctx.translate(x - w / 2 * size, y - h * size);\n        ctx.scale(size, size);\n        ctx.fillStyle = '#16D0DC';\n        ctx.fill(this.waterPath, 'evenodd');\n\n        ctx.clearRect(0, 0, w, h * (1 - (0.05 + fill * 0.915)));\n        ctx.restore();\n\n        ctx.save();\n        ctx.translate(x - w / 2 * size, y - h * size);\n        ctx.scale(size, size);\n        ctx.fillStyle = 'black';\n        ctx.fill(this.bucketPath, 'evenodd');\n        ctx.restore();\n    }\n\n    render() {\n        const ctx = this.ctx;\n\n        ctx.clearRect(0, 0, this.size.width, this.size.height);\n\n        ctx.save();\n        ctx.translate(0, 0);\n        ctx.fillStyle = '#f0f0f0';\n        ctx.fillRect(0, 0, this.size.width, this.size.height);\n\n        const maxSize = Math.max(this.executionState.params.X, this.executionState.params.Y);\n        const xSize = this.executionState.params.X / maxSize;\n        const ySize = this.executionState.params.Y / maxSize;\n        const xFill = this.executionState.state.x / this.executionState.params.X;\n        const yFill = this.executionState.state.y / this.executionState.params.Y;\n\n        this.drawBucket(this.size.width * (3 / 9), this.size.height * (3 / 4), xSize, xFill);\n        this.drawBucket(this.size.width * (6 / 9), this.size.height * (3 / 4), ySize, yFill);\n\n        ctx.font = '50px sans-serif';\n        ctx.textBaseline = 'top';\n        ctx.textAlign = 'center';\n        \n        ctx.save();\n        ctx.fillStyle = (this.executionState.state.x === this.executionState.params.Z) ? 'green' : 'black';\n        if (this.executionState.state.x === this.executionState.params.Z) {\n            ctx.shadowColor = 'lime';\n            ctx.shadowBlur = 30;\n        }\n        ctx.fillText(String(this.executionState.state.x), this.size.width * (3 / 9), this.size.height * (3 / 4) + 50);\n        ctx.restore();\n\n        ctx.save();\n        ctx.fillStyle = (this.executionState.state.y === this.executionState.params.Z) ? 'green' : 'black';\n        if (this.executionState.state.y === this.executionState.params.Z) {\n            ctx.shadowColor = 'lime';\n            ctx.shadowBlur = 30;\n        }\n        ctx.fillText(String(this.executionState.state.y), this.size.width * (6 / 9), this.size.height * (3 / 4) + 50);\n        ctx.restore();\n\n        ctx.restore();\n        \n    }\n\n}","import { RefObject, useRef, useEffect, useState } from \"react\";\n\nimport VisLoop, { IDimensions, IExecutionState } from \"./VisLoop\";\n\nimport './style.scss';\n\nfunction getDimensions(ref: HTMLElement) {\n    return {\n        width: ref.clientWidth,\n        height: ref.clientHeight,\n    };\n}\n\nfunction useElementResize(ref: RefObject<HTMLElement>): IDimensions {\n    const [elementSize, setElementSize] = useState<IDimensions>({ width: 800, height: 600 });\n\n    useEffect(() => {\n        setElementSize(getDimensions(ref.current!));\n\n        const handler = () => {\n            setElementSize(getDimensions(ref.current!));\n        };\n\n        window.addEventListener('resize', handler);\n        return () => window.removeEventListener('resize', handler);\n    }, []);\n\n    return elementSize;\n}\n\nfunction Visualization({ executionState }: { executionState: IExecutionState }) {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const canvasSize = useElementResize(canvasRef);\n    const [ visLoop, setVisLoop ] = useState<VisLoop | null>(null);\n\n    useEffect(() => {\n        const newVisLoop = new VisLoop(canvasRef.current!, canvasSize, executionState);\n        newVisLoop.start();\n        setVisLoop(newVisLoop);\n        return () => newVisLoop.stop();\n    }, []);\n\n    useEffect(() => {\n        if (!visLoop) {\n            return;\n        }\n        visLoop.setExecutionState(executionState);\n        visLoop.setSize(canvasSize);\n    }, [visLoop, executionState, canvasSize]);\n\n    return (\n        <div className=\"visualization\">\n            <canvas\n                ref={canvasRef}\n                className=\"vis-canvas\"\n                width={canvasSize.width}\n                height={canvasSize.height}\n            />\n        </div>\n    )\n}\n\nexport default Visualization;","import { useState, useEffect } from \"react\";\n\nimport { ExecutionStep } from \"jugs-task-package/dist/ActionExecutor\";\nimport { ActionsIterator } from \"jugs-task-package/dist/types/AbstractSolver\";\nimport InputParams from \"jugs-task-package/dist/types/InputParams\";\nimport { IExecutionState } from \"../Visualization/VisLoop\";\n\nexport interface IActionsLogProps {\n    stepDuration: number,\n    params: InputParams;\n    actionsLength: number;\n    actionsIterator: ActionsIterator;\n    onStateChange: (state: IExecutionState) => void;\n    onStepDurationChange: (stepDuration: number) => void;\n}\n\nfunction usePlayer(props: IActionsLogProps, stepDuration: number, executionSteps: ExecutionStep[]) {\n    const [playState, setPlayState] = useState<'play' | 'pause'>('pause');\n    const [playPosition, setPlayPosition] = useState(0);\n\n    useEffect(() => {\n        props.onStateChange({\n            params: props.params,\n            type: 'state',\n            ...(!executionSteps[playPosition - 1] ? {\n                action: 'fX', state: { x: 0, y: 0 },\n            } : executionSteps[playPosition - 1]),\n        });\n    }, [playPosition, props.params, executionSteps]);\n\n    useEffect(() => {\n        let timeout: any = null;\n        if (playState === 'play') {\n            if (playPosition >= props.actionsLength) {\n                timeout = setTimeout(() => {\n                    setPlayState('pause');\n                }, 1000);\n            } else {\n                timeout = setTimeout(() => {\n                    setPlayPosition(playPosition + 1);\n                }, stepDuration);\n            }\n        }\n        return () => {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    }, [playPosition, playState]);\n\n    const play = () => {\n        if (playPosition >= props.actionsLength) {\n            setPlayPosition(0);\n        }\n        setPlayState('play');\n    }\n\n    const pause = () => {\n        setPlayState('pause')\n    }\n\n    const stop = () => {\n        setPlayState('pause');\n        setPlayPosition(0);\n    }\n\n    const replay = () => {\n        setPlayPosition(0);\n        setPlayState('play');\n    }\n\n    return { replay, play, pause, stop, playState, playPosition, setPlayPosition };\n}\n\nexport default usePlayer;","import { CSSProperties } from \"react\";\n\nimport classNames from \"classnames\";\n\nimport { ExecutionStep } from \"jugs-task-package/dist/ActionExecutor\";\nimport InputParams from \"jugs-task-package/dist/types/InputParams\";\nimport JugAction from \"jugs-task-package/dist/types/JugAction\";\n\ninterface IActionRowProps {\n    style: CSSProperties;\n    index: number;\n    step: ExecutionStep | null;\n    actionsLength: number;\n    params: InputParams;\n\n    playPosition: number;\n    setPlayPosition: (v: number) => void;\n}\n\nfunction actionText(action: JugAction) {\n    return {\n        'fX': 'Fill X',\n        'fY': 'Fill Y',\n        'eX': 'Empty X',\n        'eY': 'Empty Y',\n        'X2Y': 'Transfer X to Y',\n        'Y2X': 'Transfer Y to X',\n    }[action];\n}\n\nexport default function ActionRow(props: IActionRowProps) {\n    const e = props.step;\n    const isLast = props.index === props.actionsLength;\n    const isFinal = (isX: boolean) => e ? { final: isLast && (isX ? e.state.x : e.state.y) === props.params.Z } : void 0;\n    return (\n        <div\n            key={props.index}\n            style={props.style}\n            className={classNames(\"el-row\", { active: props.playPosition === props.index })}\n            onClick={() => props.setPlayPosition(props.index)}\n        >\n            <div className=\"el-name\">{e ? actionText(e.action) : 'Start'}</div>\n            <div className={classNames('el-x el-state', isFinal(true))}>{e ? e.state.x : 0}</div>\n            <div className={classNames('el-y el-state', isFinal(false))}>{e ? e.state.y : 0}</div>\n        </div>\n    );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, ButtonGroup, Intent, Slider } from \"@blueprintjs/core\";\n\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\n\nimport ActionExecutor, { ExecutionStep } from \"jugs-task-package/dist/ActionExecutor\";\n\nimport usePlayer, { IActionsLogProps } from \"./usePlayer\";\nimport ActionRow from \"./ActionRow\";\n\nimport './style.scss';\n\nfunction ActionsLog(props: IActionsLogProps) {\n    const listRef = useRef<List<ExecutionStep>>(null);\n    const { stepDuration, params, actionsLength, actionsIterator, onStepDurationChange } = props;\n    const [ executionSteps, setExecutionSteps ] = useState<ExecutionStep[]>([]);\n    const { replay, play, pause, stop, playState, playPosition, setPlayPosition } = usePlayer(props, stepDuration, executionSteps);\n\n    useEffect(() => executionSteps.length ? replay() : stop(), [executionSteps]); // stop when no solution\n\n    useEffect(() => {\n        const actionExecutor = new ActionExecutor(params);\n        setExecutionSteps([...actionExecutor.executionIterator(actionsIterator)]);\n    }, [params, actionsLength, actionsIterator]);\n\n    useEffect(() => {\n        if (listRef.current) {\n            listRef.current.scrollToItem(playPosition, 'center');\n        }\n    }, [playPosition]);\n\n    if (!executionSteps.length) {\n        return (\n            <div className=\"actions-log no-solution\">\n                No solution for this params\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"actions-log\">\n            <div className=\"log-block\">\n                <ButtonGroup>\n                    <Button icon=\"play\" disabled={playState === 'play'} intent={Intent.PRIMARY} onClick={play}>Play</Button>\n                    <Button icon=\"pause\" disabled={playState === 'pause'} intent={Intent.WARNING} onClick={pause}>Pause</Button>\n                    <Button icon=\"stop\" disabled={playState === 'pause' && (playPosition === 0 || playPosition === actionsLength)} intent={Intent.DANGER} onClick={stop}>Stop</Button>\n                </ButtonGroup>\n            </div>\n            <div className=\"log-block step-duration-block\">\n                <div style={{ textAlign: 'center', marginBottom: 10 }}>Action duration:</div>\n                <Slider\n                    max={5000}\n                    min={20}\n                    labelValues={[20, 1000, 2000, 3000, 4000, 5000]}\n                    value={stepDuration}\n                    onChange={onStepDurationChange}\n                />\n            </div>\n            <div className=\"log-block\">\n                Actions count: {actionsLength}\n            </div>\n            <div className=\"execution-log\">\n                <div className=\"el-head\">\n                    <div className=\"el-name\">Name</div>\n                    <div className=\"el-x el-state\">X</div>\n                    <div className=\"el-y el-state\">Y</div>\n                </div>\n                <div className=\"el-body\">\n                    <AutoSizer>\n                        {({ width, height }) => (\n                            <List\n                                ref={listRef}\n                                width={width}\n                                height={height}\n                                itemSize={30}\n                                itemCount={actionsLength + 1}\n                            >\n                                {({ data, index, style }) => {\n                                    return (\n                                        <ActionRow\n                                            style={style}\n                                            index={index}\n                                            step={index ? executionSteps[index - 1] : null}\n                                            actionsLength={actionsLength}\n                                            params={params}\n\n                                            playPosition={playPosition}\n                                            setPlayPosition={setPlayPosition}\n                                        />\n                                    );\n                                }}\n                            </List>\n                        )}\n                    </AutoSizer>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ActionsLog;","import React, { useCallback, useState } from \"react\";\n\nimport { Alert, Button, Intent, NumericInput, Toaster } from \"@blueprintjs/core\";\n\nimport InputParams from \"jugs-task-package/dist/types/InputParams\";\nimport randomBetween from \"jugs-task-package/dist/utils/randomBetween\";\n\nimport './style.scss';\n\nconst toaster = Toaster.create({ position: \"bottom\" });\n\nexport default function Header({ onUpdate }: { onUpdate: (params: InputParams) => void }) {\n    const [X, setX] = useState('2');\n    const [Y, setY] = useState('10');\n    const [Z, setZ] = useState('4');\n\n    const onSolveClick = useCallback(() => {\n        if (isNaN(Number(X)) || isNaN(Number(Y)) || isNaN(Number(Z)) || (Number(X) < 1) || (Number(Y) < 1) || (Number(Z) < 1)) {\n            toaster.show({\n                intent: Intent.DANGER,\n                message: 'Invalid input',\n            });\n            return;\n        }\n        console.log(X, Y, Z);\n        onUpdate({ X: Number(X), Y: Number(Y), Z: Number(Z) });\n    }, [X, Y, Z]);\n\n    return (\n        <div className=\"header\">\n            <Button\n                intent={Intent.NONE}\n                className=\"generate-btn\"\n                onClick={() => {\n                    const X = randomBetween(20, 5000);\n                    const Y = randomBetween(20, 5000);\n                    const Z = randomBetween(1, Math.min(X, Y));\n                    setX(String(X));\n                    setY(String(Y));\n                    setZ(String(Z));\n                    onUpdate({ X, Y, Z })\n                }}\n                icon=\"random\"\n            >\n                Random\n            </Button>\n            <NumericInput clampValueOnBlur min={1} className=\"param-input\" placeholder=\"X\" value={X} onValueChange={(v, s) => setX(s)} />\n            <NumericInput clampValueOnBlur min={1} className=\"param-input\" placeholder=\"Y\" value={Y} onValueChange={(v, s) => setY(s)} />\n            <NumericInput clampValueOnBlur min={1} className=\"param-input\" placeholder=\"Z\" value={Z} onValueChange={(v, s) => setZ(s)} />\n            <Button\n                intent={Intent.PRIMARY}\n                className=\"solve-btn\"\n                onClick={onSolveClick}\n                icon=\"cog\"\n            >\n                Solve\n            </Button>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport './App.scss';\n\nimport AbstractSolver, { ActionsIterator } from 'jugs-task-package/dist/types/AbstractSolver';\nimport Visualization from './components/Visualization';\n\nimport { solversMap, SolverType } from 'jugs-task-package/dist/utils/fetchSolution';\nimport ActionsLog from './components/ActionsLog';\nimport { IExecutionState } from './components/Visualization/VisLoop';\nimport Header from './components/Header';\n\nfunction App() {\n    const [ solverType, setSolverType ] = useState<SolverType>('fast');\n    const [ params, setParams ] = useState({ X: 2, Y: 10, Z: 4 });\n    const [ actionsIterator, setActionsIterator ] = useState<ActionsIterator | null>(null);\n    const [ actionsLength, setActionsLength ] = useState(0);\n    const [ stepDuration, setStepDuration ] = useState(600);\n    const [ executionState, setExecutionState ] = useState<IExecutionState>({\n        params,\n        type: 'state',\n        action: 'fX',\n        state: { x: 0, y: 0 }\n    });\n\n    useEffect(() => {\n        (async () => {\n            const SolverClass = solversMap[solverType];\n            const solver: AbstractSolver<any> = new SolverClass();\n            const solution = await solver.getBestSolutionFromServer(params);\n            setActionsLength(solver.getSolutionLength(solution));\n            setActionsIterator(solver.iterateActions(solution));\n        })();\n    }, [params]);\n\n    return (\n        <div className=\"app\">\n            <Header onUpdate={setParams} />\n            <div className=\"app-body\">\n                {actionsIterator ? (\n                    <>\n                        <Visualization\n                            executionState={executionState}\n                        />\n                        <ActionsLog\n                            actionsLength={actionsLength}\n                            actionsIterator={actionsIterator}\n                            params={params}\n                            onStateChange={setExecutionState}\n                            stepDuration={stepDuration}\n                            onStepDurationChange={setStepDuration}\n                        />\n                    </>\n                ) : (\n                    <div>\n                        Press \"Solve\" to get a solution\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}